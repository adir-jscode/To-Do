@model MidLabExam.DTOs.TaskDTO

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
 <div class="form-horizontal">
        <h4>TaskDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>
     
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Status" class="form-control">
                    @if (Model.Status == "Complete")
                    {
                        <option selected value="Complete">Complete</option>
                        <option  value="Incomplete">Incomplete</option>
                    }
                    else if (Model.Status == "Incomplete")
                    {
                        <option selected value="Incomplete">Incomplete</option>
                        <option value="Complete">Complete</option>
                    }


                </select>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.PriorityLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="PriorityLevel" class="form-control">

                    @if (Model.PriorityLevel == "Low")
                    {
                        <option selected value="Low">Low</option>
                        <option value="High">High</option>
                        <option value="Medium">Medium</option>
                    }
                    else if (Model.PriorityLevel == "High")
                    {
                        <option  value="Low">Low</option>
                        <option selected value="High">High</option>
                        <option value="Medium">Medium</option>
                    }
                    else if (Model.PriorityLevel == "Medium")
                    {
                        <option  value="Low">Low</option>
                        <option  value="High">High</option>
                        <option selected value="Medium">Medium</option>
                    }


                </select>
            </div>
        </div>

        

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <select name="CategoryId" class="form-control">
                    @foreach (var category in ViewBag.Categories)
                    {
                        if(category.Id == Model.CategoryId)
                        {
                            <option value="@Model.CategoryId">@category.Name</option>
                        }
                        else
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                       
                    }
                    </select>
            </div>
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
     </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
